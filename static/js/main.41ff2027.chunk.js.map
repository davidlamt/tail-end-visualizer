{"version":3,"sources":["components/AppProvider.tsx","components/LoadingDots.tsx","components/styles/index.ts","enums/ClassModifier.ts","hooks/useAppContext.ts","static/perYearStatistics.ts","utils/pointClassModifiers.ts","utils/mouseEvents.ts","components/MainSection.tsx","components/NavigationBar.tsx","components/Point.tsx","components/Modal/InvalidAgeModal.tsx","components/Modal/Modal.tsx","components/Modal/ModalPortal.tsx","components/Modal/RootModal.tsx","components/Modal/index.ts","components/Tooltip.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["AppContext","React","createContext","age","forceRerender","hideModal","isAnimating","modalOptions","modalType","rerenderBuster","setAge","setIsAnimating","showModal","AppProvider","children","useState","setModalType","setRerenderBuster","setModalOptions","Provider","value","type","options","LoadingDotsContainer","styled","div","LoadingDots","ClassModifier","linkBase","css","primaryButtonBase","useAppContext","appContext","useContext","Error","perYearStatistics","noun","perYearCount","addPointClassModifiers","classModifier","pointRefs","baseClass","classList","idx","length","add","resetPointClassModifiers","remove","Complete","LastSelected","Selected","mouseOverEvent","MouseEvent","bubbles","cancelable","view","window","mouseOutEvent","Description","MainContainer","statisticFormatter","Intl","NumberFormat","notation","compactDisplay","Array","previousLastSelectedPointRef","MainSection","lastSelectedPointRef","useRef","pointsFragment","showSelectedAgeTooltip","visible","pointRef","current","dispatchEvent","useEffect","setTimeout","push","containerStyle","margin","disabled","getTitle","percentOfTotal","Math","floor","randomStatistic","random","totalStatisticCountLeft","format","generateTooltipContent","key","tooltipStyle","marginTop","ref","href","onMouseEnter","AgeInput","input","InputContainer","NavigationContainer","nav","NavigationHeader","h1","VisualizeButton","button","lastSelectedAge","NavigationBar","currentAge","setCurrentAge","onChange","e","target","validity","valid","pattern","placeholder","onClick","StyledPoint","span","Point","TitleContainer","Title","CloseModalButton","Body","EdgeAge","InvalidAgeModal","content","closeOnOutsideClick","Fragment","ModalBox","Modal","modalBoxRef","handleClick","event","contains","document","addEventListener","removeEventListener","ModalContainer","createElement","style","alignItems","backgroundColor","display","height","justifyContent","left","position","top","width","zIndex","modalRoot","getElementById","ModalPortal","containerRef","appendChild","removeChild","createPortal","AvailableModal","invalidAge","RootModal","SelectedModal","TooltipArrow","props","TooltipContainer","TooltipContent","Tooltip","title","isVisible","setIsVisible","onMouseLeave","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.41ff2027.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport interface AppContextValues {\n  age: number;\n  forceRerender: () => void;\n  hideModal: () => void;\n  isAnimating: boolean;\n  modalOptions: { age?: number };\n  modalType: string;\n  rerenderBuster: number;\n  setAge: React.Dispatch<React.SetStateAction<number>>;\n  setIsAnimating: React.Dispatch<React.SetStateAction<boolean>>;\n  showModal: (type: string, options?: { age?: number }) => void;\n}\n\nexport const AppContext = React.createContext<AppContextValues>({\n  age: 0,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  forceRerender: () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  hideModal: () => {},\n  isAnimating: false,\n  modalOptions: {},\n  modalType: '',\n  rerenderBuster: 0,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setAge: () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setIsAnimating: () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  showModal: () => {},\n});\n\ninterface AppProviderProps {\n  children: React.ReactElement | React.ReactElement[];\n}\n\nconst AppProvider: React.FunctionComponent<AppProviderProps> = ({\n  children,\n}: AppProviderProps) => {\n  const [age, setAge] = useState(0);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [modalType, setModalType] = useState('');\n  const [rerenderBuster, setRerenderBuster] = useState(0);\n  const [modalOptions, setModalOptions] = useState({});\n\n  const forceRerender = () => setRerenderBuster(rerenderBuster + 1);\n  const hideModal = () => setModalType('');\n  const showModal = (type: string, options = {}) => {\n    setModalOptions(options);\n    setModalType(type);\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        age,\n        forceRerender,\n        hideModal,\n        isAnimating,\n        modalOptions,\n        modalType,\n        rerenderBuster,\n        setAge,\n        setIsAnimating,\n        showModal,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppProvider;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst LoadingDotsContainer = styled.div`\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  width: 100%;\n\n  span {\n    animation: blink 1.4s linear infinite;\n    background-color: #fff;\n    border-radius: 50%;\n    height: 7px;\n    margin: 0 2px;\n    width: 7px;\n\n    @keyframes blink {\n      0% {\n        opacity: 0.2;\n      }\n\n      50% {\n        opacity: 1;\n      }\n\n      100% {\n        opacity: 0.2;\n      }\n    }\n  }\n\n  span:nth-of-type(2) {\n    animation-delay: 0.2s;\n  }\n\n  span:nth-of-type(3) {\n    animation-delay: 0.4s;\n  }\n`;\n\nconst LoadingDots: React.FunctionComponent = () => {\n  return (\n    <LoadingDotsContainer>\n      <span />\n      <span />\n      <span />\n    </LoadingDotsContainer>\n  );\n};\n\nexport default LoadingDots;\n","import { css } from '@emotion/core';\n\nconst primaryColor = '#d4aa7d';\nconst primaryColorActive = '#cc9b66';\nconst primaryColorInactive = '#e6cdb2';\nconst brandDark = '#282c34';\n\nconst linkBase = css`\n  color: ${primaryColor};\n`;\n\nconst primaryButtonBase = css`\n  background-color: ${primaryColor};\n  border: none;\n  color: #fff;\n  cursor: pointer;\n  font-size: 1em;\n  min-width: 100px;\n  outline: none;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: ${primaryColorActive};\n  }\n\n  &:disabled {\n    background-color: ${primaryColorInactive};\n    cursor: not-allowed;\n  }\n`;\n\nexport { brandDark, primaryColor, primaryColorActive, primaryColorInactive };\nexport { linkBase, primaryButtonBase };\n","enum ClassModifier {\n  Complete = '--complete',\n  LastSelected = '--lastSelected',\n  Selected = '--selected',\n}\n\nexport default ClassModifier;\n","import { useContext } from 'react';\n\nimport { AppContext, AppContextValues } from '../components/AppProvider';\n\nconst useAppContext = (): AppContextValues => {\n  const appContext = useContext(AppContext);\n\n  if (!appContext) {\n    throw new Error(\n      'useAppContext must be used within an AppProvider consumer'\n    );\n  }\n\n  return appContext;\n};\n\nexport default useAppContext;\n","interface PerYearStatistic {\n  noun: string;\n  perYearCount: number;\n}\n\nconst perYearStatistics: PerYearStatistic[] = [\n  { noun: 'breath', perYearCount: 8000000 },\n  { noun: 'day', perYearCount: 365 },\n  { noun: 'heartbeat', perYearCount: 42000000 },\n  { noun: 'laugh', perYearCount: 6000 },\n  { noun: 'word', perYearCount: 2555000 },\n];\n\nexport default perYearStatistics;\n","import { ClassModifier } from '../enums';\n\nconst addPointClassModifiers = (\n  classModifier: string,\n  pointRefs: HTMLSpanElement[]\n): void => {\n  const baseClass = pointRefs[1].classList[0];\n\n  for (let idx = 1; idx <= pointRefs.length; idx++) {\n    if (pointRefs[idx]) {\n      pointRefs[idx].classList.add(`${baseClass}${classModifier}`);\n    }\n  }\n};\n\nconst resetPointClassModifiers = (pointRefs: HTMLSpanElement[]): void => {\n  const baseClass = pointRefs[1].classList[0];\n\n  for (let idx = 1; idx <= pointRefs.length; idx++) {\n    if (pointRefs[idx]) {\n      pointRefs[idx].classList.remove(\n        `${baseClass}${ClassModifier.Complete}`,\n        `${baseClass}${ClassModifier.LastSelected}`,\n        `${baseClass}${ClassModifier.Selected}`\n      );\n    }\n  }\n};\n\nexport { addPointClassModifiers, resetPointClassModifiers };\nexport default { addPointClassModifiers, resetPointClassModifiers };\n","const mouseOverEvent = new MouseEvent('mouseover', {\n  bubbles: true,\n  cancelable: true,\n  view: window,\n});\n\nconst mouseOutEvent = new MouseEvent('mouseout', {\n  bubbles: true,\n  cancelable: true,\n  view: window,\n});\n\nexport { mouseOverEvent, mouseOutEvent };\nexport default { mouseOverEvent, mouseOutEvent };\n","import React, { useEffect, useRef } from 'react';\nimport styled from '@emotion/styled';\n\nimport { linkBase } from './styles';\nimport { Point, Tooltip } from './';\n\nimport { ClassModifier } from '../enums';\nimport { useAppContext } from '../hooks';\nimport perYearStatistics from '../static/perYearStatistics';\nimport {\n  addPointClassModifiers,\n  resetPointClassModifiers,\n} from '../utils/pointClassModifiers';\nimport { mouseOverEvent, mouseOutEvent } from '../utils/mouseEvents';\n\nconst MAX_AGE = 90;\nconst MAX_COLUMNS = 10;\n\nconst Description = styled.div`\n  font-size: 18px;\n  text-align: center;\n\n  a {\n    ${linkBase}\n  }\n`;\n\nconst MainContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  margin: 20px auto;\n  max-width: 50em;\n`;\n\nconst statisticFormatter = new Intl.NumberFormat('en-US', {\n  // eslint-disable-next-line\n  // @ts-ignore: Types not defined for these options yet\n  notation: 'compact',\n  compactDisplay: 'long',\n});\n\nconst generateTooltipContent = (age: number): string => {\n  if (age === MAX_AGE) {\n    return '🎉🎉🎉\\nWoo! Celebrations are in order!\\n🎊 🎊';\n  }\n\n  const percentOfTotal = Math.floor((age / MAX_AGE) * 100);\n  const randomStatistic =\n    perYearStatistics[Math.floor(Math.random() * perYearStatistics.length)];\n  const totalStatisticCountLeft =\n    randomStatistic.perYearCount * (MAX_AGE - age);\n\n  /* eslint-disable */\n  return (\n    'Year ' + age + ' (' + percentOfTotal + '% to ' + MAX_AGE + ')' + '\\n' + \n    'There\\'s about ' + statisticFormatter.format(totalStatisticCountLeft) + ' ' + randomStatistic.noun + 's left. Make them count!'\n  );\n  /* eslint-enable */\n};\n\nconst pointRefs: HTMLSpanElement[] = new Array(MAX_AGE);\nlet previousLastSelectedPointRef: HTMLSpanElement | null = null;\n\nconst MainSection: React.FunctionComponent = () => {\n  const { age, isAnimating, rerenderBuster, setIsAnimating } = useAppContext();\n  const lastSelectedPointRef = useRef<HTMLSpanElement | null>(null);\n  const pointsFragment: React.ReactElement[] = [];\n\n  const showSelectedAgeTooltip = (\n    visible = true,\n    pointRef = lastSelectedPointRef?.current\n  ) => {\n    if (pointRef) {\n      if (previousLastSelectedPointRef) {\n        previousLastSelectedPointRef.dispatchEvent(mouseOutEvent);\n      }\n      previousLastSelectedPointRef = pointRef;\n\n      pointRef.dispatchEvent(visible ? mouseOverEvent : mouseOutEvent);\n    }\n  };\n\n  useEffect(() => {\n    if (age < 1) return;\n\n    resetPointClassModifiers(pointRefs);\n    setIsAnimating(true);\n\n    for (let idx = 1; idx <= age; idx++) {\n      setTimeout(() => {\n        const baseClass = pointRefs[idx].classList[0];\n        pointRefs[idx].classList.add(`${baseClass}${ClassModifier.Selected}`);\n\n        if (idx === age) {\n          setTimeout(() => {\n            setIsAnimating(false);\n            showSelectedAgeTooltip();\n\n            pointRefs[idx].classList.add(\n              `${baseClass}${ClassModifier.LastSelected}`\n            );\n\n            addPointClassModifiers(ClassModifier.Complete, pointRefs);\n          }, 2000);\n        }\n      }, 50 * idx);\n    }\n  }, [age, rerenderBuster, setIsAnimating]);\n\n  for (let idx = 1; idx <= MAX_AGE; idx++) {\n    pointsFragment.push(\n      <Tooltip\n        containerStyle={{ margin: '5px' }}\n        disabled={isAnimating || !age}\n        getTitle={() => generateTooltipContent(idx)}\n        key={idx}\n        tooltipStyle={{ marginTop: '15px' }}\n      >\n        <Point\n          pointRef={(ref) => {\n            if (ref) {\n              if (idx === age) lastSelectedPointRef.current = ref;\n              pointRefs[idx] = ref;\n            }\n          }}\n        />\n      </Tooltip>\n    );\n\n    if (idx % MAX_COLUMNS === 0) {\n      pointsFragment.push(<div key={'divider' + idx} />);\n    }\n  }\n\n  return (\n    <MainContainer>\n      <Description>\n        <p>Let&#39;s put your life in perspective...</p>\n        <p>\n          This tool is based on{' '}\n          <a href=\"https://waitbutwhy.com/2015/12/the-tail-end.html\">\n            The Tail End article on Wait But Why\n          </a>\n          .\n        </p>\n      </Description>\n      <div onMouseEnter={() => showSelectedAgeTooltip(false)}>\n        {pointsFragment}\n      </div>\n    </MainContainer>\n  );\n};\n\nexport default MainSection;\n","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\n\nimport { brandDark, primaryButtonBase } from './styles';\nimport { LoadingDots } from './';\n\nimport { useAppContext } from '../hooks/';\n\nconst AgeInput = styled.input`\n  background-color: #ebebeb;\n  border-bottom-left-radius: 5px;\n  border-top-left-radius: 5px;\n  border: 1px solid transparent;\n  outline: none;\n  padding: 15px;\n  transition: background-color 0.3s ease;\n\n  &:focus {\n    background-color: #fff;\n    border: 1px solid #ebebeb;\n  }\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  margin: 5px;\n`;\n\nconst NavigationContainer = styled.nav`\n  align-items: center;\n  background-color: ${brandDark};\n  color: #fff;\n  display: flex;\n  justify-content: space-between;\n  min-height: 50px;\n  padding: 0 20px;\n\n  @media (max-width: 660px) {\n    flex-direction: column;\n  }\n`;\n\nconst NavigationHeader = styled.h1`\n  font-weight: 700;\n  margin: 0;\n`;\n\nconst VisualizeButton = styled.button`\n  ${primaryButtonBase}\n\n  border-bottom-right-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nconst MIN_AGE = 1;\nconst MAX_AGE = 90;\nlet lastSelectedAge = 0;\n\nconst NavigationBar: React.FunctionComponent = () => {\n  const { forceRerender, isAnimating, setAge, showModal } = useAppContext();\n  const [currentAge, setCurrentAge] = useState('');\n\n  const onVisualize = () => {\n    const age = +currentAge;\n\n    if (age < MIN_AGE || age > MAX_AGE) {\n      showModal('invalidAge', { age });\n      return;\n    }\n\n    if (lastSelectedAge === age) {\n      forceRerender();\n    } else {\n      lastSelectedAge = age;\n      setAge(age);\n    }\n  };\n\n  return (\n    <NavigationContainer>\n      <NavigationHeader>The Tail End Visualizer</NavigationHeader>\n      <InputContainer>\n        <AgeInput\n          onChange={(e) =>\n            e.target.validity.valid && setCurrentAge(e.target.value)\n          }\n          pattern=\"[0-9]*\"\n          placeholder=\"Enter your age\"\n          value={currentAge}\n        />\n        <VisualizeButton\n          disabled={!currentAge || isAnimating}\n          onClick={onVisualize}\n        >\n          {isAnimating ? <LoadingDots /> : 'Visualize'}\n        </VisualizeButton>\n      </InputContainer>\n    </NavigationContainer>\n  );\n};\n\nexport default NavigationBar;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\ninterface PointProps {\n  pointRef?: (ref: HTMLSpanElement | null) => void;\n}\n\nconst StyledPoint = styled.span<PointProps>`\n  border: 1px solid #000;\n  display: block;\n  height: 25px;\n  transition: transform 1s ease, background-color 0.5s linear;\n  width: 25px;\n\n  &--complete {\n    &:hover {\n      transform: rotate(45deg);\n    }\n  }\n\n  &--selected {\n    animation: selectedAnimation 2s linear;\n    background-color: #90a9b7;\n  }\n\n  &--lastSelected {\n    animation: rotateAnimation 10s linear infinite;\n  }\n\n  @keyframes selectedAnimation {\n    0% {\n      background-color: #d4aa7d;\n    }\n\n    50% {\n      background-color: #efd09e;\n    }\n\n    75% {\n      transform: scale(1.2);\n      background-color: #d2d8b3;\n    }\n\n    100% {\n      transform: scale(1);\n      background-color: #90a9b7;\n    }\n  }\n\n  @keyframes rotateAnimation {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Point: React.FunctionComponent<PointProps> = ({\n  pointRef,\n}: PointProps) => {\n  return <StyledPoint ref={pointRef} />;\n};\n\nexport default Point;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { primaryColor } from '../styles';\nimport { Modal } from '.';\n\nimport { useAppContext } from '../../hooks';\n\nconst TitleContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  position: relative;\n`;\n\nconst Title = styled.div`\n  font-size: 2em;\n  margin-bottom: 15px;\n  text-align: center;\n`;\n\nconst CloseModalButton = styled.button`\n  background-color: #fff;\n  border-radius: 50%;\n  border: 1px solid ${primaryColor};\n  color: ${primaryColor};\n  cursor: pointer;\n  height: 25px;\n  margin: 0;\n  outline: none;\n  padding: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 25px;\n\n  &:hover {\n    background-color: ${primaryColor};\n    color: #fff;\n  }\n`;\n\nconst Body = styled.div`\n  line-height: 1.5;\n  text-align: center;\n  white-space: pre-wrap;\n`;\n\nconst EdgeAge = {\n  Min: 1,\n  Max: 90,\n};\n\ninterface InvalidAgeModalProps {\n  options: { age?: number };\n}\n\nconst InvalidAgeModal: React.FunctionComponent<InvalidAgeModalProps> = ({\n  options: { age = 0 },\n}: InvalidAgeModalProps) => {\n  const { hideModal } = useAppContext();\n\n  let content = `You're ${age}?\\n\\n`;\n  if (age < EdgeAge.Min) {\n    content +=\n      \"You're too young to be using the computer. Hold on, I'm contacting your parents right now.\";\n  } else if (age > EdgeAge.Max) {\n    content +=\n      '?$#JKkdjak9()%#5DAISI#$(@*/\\nDoE5 N0T CoMpuT3\\n\\nJust kidding, get outta here and enjoy life!!';\n  }\n\n  return (\n    <Modal closeOnOutsideClick>\n      <React.Fragment>\n        <TitleContainer>\n          <Title>Whoa there...</Title>\n          <CloseModalButton onClick={hideModal}>X</CloseModalButton>\n        </TitleContainer>\n        <Body>{content}</Body>\n      </React.Fragment>\n    </Modal>\n  );\n};\n\nexport default InvalidAgeModal;\n","import React, { useEffect, useRef } from 'react';\nimport styled from '@emotion/styled';\n\nimport { ModalPortal } from './';\n\nimport { useAppContext } from '../../hooks';\n\nconst ModalBox = styled.div`\n  animation: slideInTop ease-in 0.3s;\n  background-color: #fff;\n  border-radius: 5px;\n  padding: 30px;\n  width: 300px;\n\n  @keyframes slideInTop {\n    0% {\n      opacity: 0;\n      transform: translateY(-25%);\n    }\n\n    100% {\n      opacity: 1;\n      transform: translateY(0%);\n    }\n  }\n`;\n\ninterface ModalProps {\n  children: Element | React.ReactElement | string;\n  closeOnOutsideClick?: boolean;\n}\n\nconst Modal: React.FunctionComponent<ModalProps> = ({\n  children,\n  closeOnOutsideClick = false,\n}: ModalProps) => {\n  const { hideModal } = useAppContext();\n  const modalBoxRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    function handleClick(event: MouseEvent) {\n      if (\n        closeOnOutsideClick &&\n        modalBoxRef &&\n        modalBoxRef.current &&\n        !modalBoxRef.current.contains(event.target as Node)\n      ) {\n        hideModal();\n      }\n    }\n\n    if (closeOnOutsideClick) {\n      document.addEventListener('mousedown', handleClick);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  }, [closeOnOutsideClick, hideModal]);\n\n  return (\n    <ModalPortal>\n      <ModalBox ref={modalBoxRef}>{children}</ModalBox>\n    </ModalPortal>\n  );\n};\n\nexport default Modal;\n","import React, { useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst ModalContainer = document.createElement('div');\nModalContainer.style.alignItems = 'center';\nModalContainer.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';\nModalContainer.style.display = 'flex';\nModalContainer.style.height = '100%';\nModalContainer.style.justifyContent = 'center';\nModalContainer.style.left = '0';\nModalContainer.style.position = 'absolute';\nModalContainer.style.top = '0';\nModalContainer.style.width = '100%';\nModalContainer.style.zIndex = '99';\n\nconst modalRoot = document.getElementById('modal');\n\ninterface ModalPortalProps {\n  children: Element | React.ReactElement | string;\n}\n\nconst ModalPortal: React.FunctionComponent<ModalPortalProps> = ({\n  children,\n}: ModalPortalProps) => {\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  if (!containerRef.current) {\n    containerRef.current = ModalContainer;\n  }\n\n  useEffect(() => {\n    if (modalRoot && containerRef.current) {\n      modalRoot.appendChild(containerRef.current);\n    }\n\n    return () => {\n      if (modalRoot && containerRef.current) {\n        modalRoot.removeChild(containerRef.current);\n      }\n    };\n  }, []);\n\n  return createPortal(children, containerRef.current);\n};\n\nexport default ModalPortal;\n","import React from 'react';\n\nimport { InvalidAgeModal } from './';\n\nimport { useAppContext } from '../../hooks';\n\ninterface ModalOptions {\n  options: {\n    age?: number;\n  };\n}\n\ninterface AvailableModal {\n  [key: string]: React.FunctionComponent<ModalOptions>;\n}\n\nconst AvailableModal: AvailableModal = {\n  invalidAge: InvalidAgeModal,\n};\n\nconst RootModal: React.FunctionComponent = () => {\n  const { modalOptions, modalType } = useAppContext();\n  if (!modalType) return null;\n\n  const SelectedModal = AvailableModal[modalType];\n\n  if (!SelectedModal) {\n    throw new Error(`Invalid modal type: ${modalType}`);\n  }\n\n  return <SelectedModal options={modalOptions} />;\n};\n\nexport default RootModal;\n","import InvalidAgeModal from './InvalidAgeModal';\nimport Modal from './Modal';\nimport ModalPortal from './ModalPortal';\nimport RootModal from './RootModal';\n\nexport { InvalidAgeModal, Modal, ModalPortal, RootModal };\nexport default RootModal;\n","import React, { useState } from 'react';\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\n\nimport { brandDark } from './styles';\n\ninterface TooltipStyleProps {\n  position: string;\n}\n\nconst TooltipArrow = styled.span<TooltipStyleProps>`\n  position: absolute;\n\n  ${(props) =>\n    props.position === 'bottom' &&\n    css`\n      border-bottom: 8px solid ${brandDark};\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      left: 50%;\n      top: -8px;\n      transform: translateX(-50%);\n    `}\n`;\n\nconst TooltipContainer = styled.span`\n  display: inline-block;\n  position: relative;\n`;\n\nconst TooltipContent = styled.div<TooltipStyleProps>`\n  animation: fadeIn ease-in 0.5s;\n  background-color: ${brandDark};\n  border-radius: 5px;\n  color: #fff;\n  min-width: 300px;\n  padding: 10px;\n  position: absolute;\n  text-align: center;\n  white-space: pre-wrap;\n  z-index: 10;\n\n  @keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n\n    100% {\n      opacity: 1;\n    }\n  }\n\n  ${(props) =>\n    props.position === 'bottom' &&\n    css`\n      left: 50%;\n      margin-top: 10px;\n      transform: translateX(-50%);\n    `}\n`;\n\ninterface BaseTooltipProps {\n  children: React.ReactElement | React.ReactElement[];\n  containerStyle?: {\n    margin?: string;\n  };\n  disabled?: boolean;\n  position?: string;\n  tooltipStyle?: {\n    marginTop?: string;\n  };\n}\n\ninterface TooltipPropsWithGetTitle extends BaseTooltipProps {\n  getTitle: () => string;\n  title?: never;\n}\n\ninterface TooltipPropsWithTitle extends BaseTooltipProps {\n  getTitle?: never;\n  title: string;\n}\n\ntype TooltipProps = TooltipPropsWithGetTitle | TooltipPropsWithTitle;\n\nconst Tooltip: React.FunctionComponent<TooltipProps> = ({\n  children,\n  containerStyle = {},\n  disabled = false,\n  getTitle,\n  position = 'bottom',\n  title,\n  tooltipStyle = {},\n}: TooltipProps) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  return (\n    <TooltipContainer\n      onMouseEnter={() => setIsVisible(true)}\n      onMouseLeave={() => setIsVisible(false)}\n      style={containerStyle}\n    >\n      {children}\n      {!disabled && isVisible && (\n        <TooltipContent position={position} style={tooltipStyle}>\n          <TooltipArrow position={position} />\n          {getTitle ? getTitle() : title}\n        </TooltipContent>\n      )}\n    </TooltipContainer>\n  );\n};\n\nexport default Tooltip;\n","import React from 'react';\n\nimport {\n  AppProvider,\n  MainSection,\n  NavigationBar,\n  RootModal,\n} from './components';\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <AppProvider>\n      <NavigationBar />\n      <MainSection />\n      <RootModal />\n    </AppProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = (): void => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = (): void => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}